@using RehearsalRoomBookingSystem.Web.Models.ViewModels
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model MemberViewModel

@{
    ViewBag.Title = "會員資料";
}

@Html.AntiForgeryToken()

<h1>會員資料</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Members[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Members[0].Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Members[0].Card_Available_Hours)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Members[0].Memo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Members[0].UpdateUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Members[0].UpdateDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Members)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Card_Available_Hours)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Memo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdateUser)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdateDate)
                </td>
                <td>
                    <button class="btn btn-success use-btn" asp-action="UseRehearsalCardHours" id="use_@item.MemberId" data-member-id="@item.MemberId" data-member-name="@item.Name">使用</button>
                    <button class="btn btn-danger buy-btn" asp-action="BuyRehearsalCardHours" id="buy_@item.MemberId" data-member-id="@item.MemberId" data-member-name="@item.Name">購買</button>
                    <button class="btn btn-info details-btn" asp-action="Edit" id="details_@item.MemberId" data-member-id="@item.MemberId">明細</button>
                    <button class="btn btn-primary edit-btn" asp-action="Edit" id="edit_@item.MemberId" data-member-id="@item.MemberId">修改資料</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-between align-items-center">
    <div>
        共 @Model.TotalCount 筆資料
    </div>
    <div>
        @Html.PagedListPager(Model.Members, page => Url.Action("Index", new { page }), new PagedListRenderOptions
   {
       LiElementClasses = new string[] { "page-item" },
       PageClasses = new string[] { "page-link" },
       Display = PagedListDisplayMode.IfNeeded
   })
    </div>
</div>

<!-- 使用練團卡時數的 Modal -->
<div class="modal fade" id="useCardTimeModal" tabindex="-1" aria-labelledby="useCardTimeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="useCardTimeModalLabel">使用練團卡時數</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">會員姓名</label>
                    <p id="memberName" class="form-control-static"></p>
                </div>
                <div class="mb-3">
                    <label for="useHours" class="form-label">使用時數</label>
                    <input type="number" class="form-control" id="useHours" min="1" value="1">
                </div>
                <input type="hidden" id="memberId" value="" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" id="confirmUseTime">確認使用</button>
            </div>
        </div>
    </div>
</div>

<!-- 交易明細 Modal -->
<div class="modal fade" id="transactionDetailsModal" tabindex="-1" aria-labelledby="transactionDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="transactionDetailsModalLabel">交易明細</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">會員姓名</label>
                    <p id="transactionMemberName" class="form-control-static"></p>
                </div>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>交易時間</th>
                                <th>類型</th>
                                <th>交易時數</th>
                                <th>建立者</th>
                                <th>操作</th>
                            </tr>
                        </thead>
                        <tbody id="transactionTableBody">
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // 當點擊使用按鈕時
            $('.use-btn').click(function (e) {
                e.preventDefault();

                // 取得會員Id和姓名
                var memberId = $(this).data('member-id');
                var memberName = $(this).data('member-name');

                // 設定會員Id到Modal的隱藏欄位
                $('#memberId').val(memberId);
                // 設定會員姓名
                $('#memberName').text(memberName);

                // 顯示Modal
                var useCardTimeModal = new bootstrap.Modal(document.getElementById('useCardTimeModal'));
                useCardTimeModal.show();
            });

            // 當點擊確認使用按鈕時
            $('#confirmUseTime').click(function () {
                var memberId = $('#memberId').val();
                var useHours = $('#useHours').val();

                // 驗證輸入
                if (!useHours || useHours <= 0) {
                    alert('請輸入有效的使用時數');
                    return;
                }

                // 發送 AJAX 請求
                $.ajax({
                    url: '@Url.Action("UseCardTime", "Member")',
                    type: 'POST',
                    data: JSON.stringify({
                        memberId: parseInt(memberId),
                        useHours: parseInt(useHours)
                    }),
                    contentType: 'application/json',
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (result) {
                        if (result.Success) {
                            alert('使用成功！剩餘時數：' + result.RemainingHours);
                            location.reload();
                        } else {
                            alert(result.Message);
                        }
                    },
                    error: function (xhr) {
                        alert(xhr.responseJSON ? xhr.responseJSON.message : '處理過程發生錯誤');
                    }
                });

                // 關閉Modal
                var modal = bootstrap.Modal.getInstance(document.getElementById('useCardTimeModal'));
                modal.hide();
            });

            // 當點擊購買按鈕時
            $('.buy-btn').click(function (e) {
                e.preventDefault();

                var memberId = $(this).data('member-id');
                var memberName = $(this).data('member-name');

                if (!confirm(memberName + ' 確定要購買10小時的練團時數？')) {
                    return;
                }

                $.ajax({
                    url: '@Url.Action("BuyCardTime", "Member")',
                    type: 'POST',
                    data: JSON.stringify({
                        memberId: parseInt(memberId)
                    }),
                    contentType: 'application/json',
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (result) {
                        if (result.Success) {
                            alert('購買成功！目前剩餘時數：' + result.RemainingHours);
                            location.reload();
                        } else {
                            alert(result.Message);
                        }
                    },
                    error: function (xhr) {
                        alert(xhr.responseJSON ? xhr.responseJSON.message : '處理過程發生錯誤');
                    }
                });
            });

            // 當點擊明細按鈕時
            $('.details-btn').click(function (e) {
                e.preventDefault();
                var memberId = $(this).data('member-id');
                var memberName = $(this).closest('tr').find('td:first').text().trim();
                
                // 設定會員姓名
                $('#transactionMemberName').text(memberName);
                
                // 發送 AJAX 請求獲取交易明細
                $.ajax({
                    url: '@Url.Action("GetMemberTransactions", "Member")',
                    type: 'GET',
                    data: { memberId: memberId },
                    success: function (transactions) {
                        var tbody = $('#transactionTableBody');
                        tbody.empty();
                        
                        transactions.forEach(function(trans) {
                            var typeText = trans.TypeId === 1 ? '購買' : 
                                         trans.TypeId === 2 ? '使用' : 
                                         trans.TypeId === 3 ? '回復購買' :
                                         trans.TypeId === 4 ? '回復使用' : '其他';
                            var row = $('<tr>');
                            row.append($('<td>').text(new Date(trans.CreateDate).toLocaleString()));
                            row.append($('<td>').text(typeText));
                            row.append($('<td>').text(trans.TransactionHours));
                            row.append($('<td>').text(trans.CreateUser));
                            
                            var actionCell = $('<td>');
                            if (trans.TypeId === 1 || trans.TypeId === 2) {
                                actionCell.append(
                                    $('<button>')
                                        .addClass('btn btn-warning btn-sm recover-btn')
                                        .text('回復')
                                        .data('transaction-id', trans.TransactionId)
                                        .data('member-id', memberId)
                                );
                            }
                            row.append(actionCell);
                            
                            tbody.append(row);
                        });
                    },
                    error: function (xhr) {
                        alert('獲取交易明細失敗');
                    }
                });
                
                // 顯示Modal
                var transactionDetailsModal = new bootstrap.Modal(document.getElementById('transactionDetailsModal'));
                transactionDetailsModal.show();
            });

            // 當點擊回復按鈕時
            $(document).on('click', '.recover-btn', function() {
                var transactionId = $(this).data('transaction-id');
                var memberId = $(this).data('member-id');
                
                if (!confirm('確定要回復這筆交易嗎？')) {
                    return;
                }

                $.ajax({
                    url: '@Url.Action("RecoverTransaction", "Member")',
                    type: 'POST',
                    data: JSON.stringify({
                        transactionId: transactionId,
                        memberId: memberId
                    }),
                    contentType: 'application/json',
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (result) {
                        if (result.success) {
                            alert('回復成功');
                            location.reload();
                        } else {
                            alert(result.message || '回復失敗');
                        }
                    },
                    error: function (xhr) {
                        alert('處理過程發生錯誤');
                    }
                });
            });
        });
    </script>
}
